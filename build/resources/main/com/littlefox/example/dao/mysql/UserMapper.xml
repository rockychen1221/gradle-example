<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.littlefox.example.dao.UserMapper">

  <resultMap id="BaseResultMap" type="com.littlefox.example.model.User">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="lid" jdbcType="VARCHAR" property="lid" />
    <result column="age" jdbcType="VARCHAR" property="age" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>

  <resultMap id="UserRoleMap" type="com.littlefox.example.model.User">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="lid" jdbcType="VARCHAR" property="lid" />
    <result column="age" jdbcType="VARCHAR" property="age" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <collection property="roles" ofType="com.littlefox.example.model.Role">
      <result property="roleId" column="l_role_id"/>
      <result property="userId" column="l_user_id"/>
      <result property="roleName" column="vc_role_name"/>
    </collection>
  </resultMap>

  <insert id="insert" parameterType="com.littlefox.example.model.User">
    insert into TEST_USER (user_name, phone,lid,age,address
      )
    values (#{userName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{lid,jdbcType=VARCHAR}, #{age,jdbcType=VARCHAR},#{address,jdbcType=VARCHAR}
      )
  </insert>

  <select id="queryList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT * FROM TEST_USER
    <where>
      <if test="id != null">
        and id = #{id}
      </if>
      <if test="userName != null">
        AND (user_name like concat('%',trim(#{userName}),'%')
      </if>
      <if test="phone != null">
        and phone = #{phone}
      </if>
    </where>
  </select>

  <select id="queryUserList" parameterType="com.littlefox.example.model.User" resultMap="BaseResultMap">
    SELECT * FROM TEST_USER
    <where>
      <if test="id != null">
        and id = #{id}
      </if>
      <if test="userName != null">
        and user_name = #{userName}
      </if>
      <if test="phone != null">
        and phone = #{phone}
      </if>
    </where>
  </select>

  <select id="queryById" parameterType="com.littlefox.example.model.User" resultMap="BaseResultMap">
    SELECT * FROM TEST_USER
    <where>
      <if test="id != null">
        and id = #{id}
      </if>
    </where>
  </select>

  <select id="query" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM TEST_USER
    <where>
      <if test="userId != null">
        and id = #{userId}
      </if>
    </where>
  </select>

  <update id="update">
    update TEST_USER set user_name=#{userName} , phone =#{phone}, age=#{age,jdbcType=VARCHAR}, address=#{address,jdbcType=VARCHAR} where id = #{id}
  </update>

  <delete id="delete">
    delete TEST_USER where id = #{id}
  </delete>

  <select id="queryUserRole" parameterType="java.lang.String" resultMap="UserRoleMap">
    select * from TEST_USER  tu left join TEST_ROLE tr
    on tu.id=tr.l_user_id
    <where>
      <if test="userId != null">
        and tu.id = #{userId}
      </if>
    </where>
  </select>

</mapper>